Lecture 14: Configuring the custom component
---------------------------------------------

1. Component Configuration in Angular
In Angular, to create a component, we use the @Component() decorator.
This decorator takes a configuration object that defines how the component behaves.

2. Selector Property: How Angular Finds Your Component
selector: 'app-header'
This tells Angular where to place your component in the DOM.

üí° Naming Convention:
The selector should be two words with a dash (e.g., app-header, my-navbar) to avoid clashing with native HTML tags.

For example:

‚ùå header ‚Üí might conflict with HTML's <header> tag
‚úÖ app-header ‚Üí clearly custom
3. Template: The HTML UI of the Component
You can define the component‚Äôs HTML in two ways:

a) Inline Template:
template: `<h1>EasyTask</h1>`
Use this only for very short templates (1-3 lines).

b) External Template (Recommended):
templateUrl: './header.component.html'
Better for clean structure and maintainability.

The file name convention is: header.component.html.

4. Creating the Template File
You create a new file:
header.component.html
And put your markup there:
<header>
  <h1>EasyTask</h1>
</header>
This uses the native <header> tag, not to be confused with your custom component (which is <app-header> in HTML).

5. Standalone Component: Modern Angular Approach
standalone: true
This means the component is self-contained and doesn't need to be declared inside an NgModule.

Angular v14+ introduced this feature, and in v19+, it's the default.
‚úÖ Recommended to always set standalone: true unless you're specifically working with NgModules.

üß© Summary of Component Setup:
import { Component } from '@angular/core';

@Component({
  selector: 'app-header',                  // How the component is used in HTML
  imports:[],
  templateUrl: './header.component.html',  // External HTML file
  standalone: true ,                        // Modern, simplified Angular component
  styleUrl:'./header.component.css'
})
export class HeaderComponent { }
üß™ How to Use the Component in HTML:
Wherever you want the header to appear, just use:
<app-header></app-header>

In app.component.ts
import { Component } from '@angular/core';
import {HeaderComponent} from './header.component'

@Component({
  selector: 'app-header',                  
  imports:[HeaderComponent],
  templateUrl: './app.component.html',
  standalone: true ,                       
  styleUrl:'./app.component.css'
})

export class AppComponent{}

